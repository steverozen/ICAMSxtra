% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ID115_functions.R
\name{ID115_PlotTransBias}
\alias{ID115_PlotTransBias}
\title{Plot transcription strand bias}
\usage{
ID115_PlotTransBias(annotated.ID.vcf, pool, damaged.base = NULL, ymax = NULL)
}
\arguments{
\item{annotated.ID.vcf}{An ID VCF annotated by
\code{AnnotateIDVCFsWithTransRanges}. It \strong{must} have transcript range
information added.}

\item{pool}{TODO Jia Geng}

\item{damaged.base}{One of \code{NULL}, \code{"purine"} or
\code{"pyrimidine"}. This function allocates approximately
equal numbers of mutations from \code{damaged.base} into
each of \code{num.of.bins} bin by expression level. E.g.
if \code{damaged.base} is \code{"purine"}, then mutations from
A and G will be allocated in approximately equal numbers to
each expression-level bin. The rationale for the name \code{damaged.base}
is that the direction of strand bias is a result of whether the damage
occurs on a purine or pyrimidine.
If \code{NULL}, the function attempts to infer the \code{damaged.base}
based on mutation counts.}

\item{ymax}{Limit for the y axis. If not specified, it defaults to NULL and
the y axis limit equals 1.5 times of the maximum mutation counts in a
specific mutation type.}
}
\value{
A list whose first element is a logic value indicating whether the
plot is successful. The second element is a named numeric vector containing
the p-values printed on the plot.
}
\description{
Plot transcription strand bias
}
\section{Note}{

The strand bias statistics are Benjamini-Hochberg q-values based on two-sided
binomial tests of the mutation counts on the transcribed and untranscribed strands
relaitve to the actual abundances of C and T on the transcribed strand. On the
plot, asterisks indicate q-values as follows *, \eqn{Q<0.05}; **, \eqn{Q<0.01}; ***,
\eqn{Q<0.001}.
}

\examples{
file <- c(system.file("extdata/Strelka-ID-vcf/",
                      "Strelka.ID.GRCh37.s1.vcf",
                      package = "ICAMSxtra"))
ID.vcf <- ReadStrelkaIDVCFs(file)
if (requireNamespace("BSgenome.Hsapiens.1000genomes.hs37d5", quietly = TRUE)) {
  annotated.ID.vcf <- AnnotateIDVCFsWithTransRanges(ID.vcf, ref.genome = "hg19",
                                                    trans.ranges = trans.ranges.GRCh37,
                                                    vcf.names = "Strelka.ID.GRCh37.s1.vcf")
  #' alternatively run below code to skip call to AnnotateIDVCFsWithTransRanges 
  #' load(c(system.file("extdata/annotated.ID.vcf.rda",package = "ICAMSxtra")))
  ID115_PlotTransBias(annotated.ID.vcf = annotated.ID.vcf[[1]],
                      pool = TRUE)
}
}
